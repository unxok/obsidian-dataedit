/* @tailwind base;
@tailwind components;
@tailwind utilities; */

.no-p-margin p {
  margin: 0;
}

.property-text-div div.cm-gutters {
  display: none !important;
}

.property-text-div div.cm-scroller {
  overflow: visible;
}

/* TODO probably shouldnt use the "*" operator nor "!important" */
.property-text-div * {
  max-width: none !important;
  width: 100% !important;
  line-height: inherit !important;
}

.property-text-div [role="textbox"] {
  width: fit-content;
  text-wrap: nowrap;
}

input.property-number-input[type="number"] {
  background-color: transparent;
  border: none;
  width: fit-content;
  font-size: var(--font-table-text-size);
  box-shadow: none;
  padding: 0px;
  height: fit-content;
}

ul.property-multitext-ul {
  margin-block: 0px 0px;
}

ul.property-multitext-ul > li {
  margin-inline-start: calc(var(--list-indent) / 2);
  padding-top: 5px; /* when rendering tags, will overlap without this */
}

ul.property-multitext-ul > li div.cm-active.cm-line {
  padding-inline-end: 1ch; /* when rendering tags, makes it easier to click to edit instead of clicking to search for tag */
}

div.column-reorder-button {
  /* position: absolute; */
  position: relative;
  width: 100%;
  height: fit-content;
  display: flex;
  flex-direction: row;
  align-items: end;
  justify-content: center;
  border-radius: var(--radius-s) var(--radius-s) 0 0;
  background-color: var(--table-drag-handle-background);
  color: transparent;
  user-select: none;
  touch-action: none;
  z-index: 1;
}

div.column-reorder-button:hover {
  color: var(--table-drag-handle-color);
  cursor: grab;
}

/* This doesn't work for some reason... natvie obsidian tables have same issue */
div.column-reorder-button[data-grabbing="true"] {
  background-color: var(--color-accent);
  /* position: absolute; */
  color: var(--text-normal);
  cursor: grabbing;
  z-index: 5;
}

/* th:has(div.column-reorder-button) {
  padding: 0%;
  border: none;
  background-color: transparent;
  height: fit-content;
  z-index: 1;
}

th:has(div.column-reorder-button[data-grabbing="true"]) {
  z-index: 5;
}

th:has(div.column-reorder-button[data-hidden="true"]) {
  opacity: 0;
  z-index: -1;
} */

div.column-reorder-button[data-hidden="true"] {
  z-index: -1;
}

/* table.dataedit-table > thead > tr > th,
table.dataedit-table > tbody > tr > td {
  white-space: nowrap;
} */

td.dataedit-is-selected,
th.dataedit-is-selected {
  position: relative;
}
td.dataedit-is-selected::after,
th.dataedit-is-selected::after {
  pointer-events: none;
  content: "";
  display: block;
  position: absolute;
  top: calc(-1 * var(--table-border-width));
  inset-inline-end: calc(-1 * var(--table-border-width));
  bottom: calc(-1 * var(--table-border-width));
  inset-inline-start: calc(-1 * var(--table-border-width));
  background-color: var(--table-selection);
  border: 0px solid var(--table-selection-border-color);
  mix-blend-mode: var(--table-selection-blend-mode);
  z-index: 1;
  border-inline-end-width: var(--table-selection-border-width);
  border-inline-start-width: var(--table-selection-border-width);
}

th.dataedit-is-selected.top::after {
  border-start-start-radius: var(--table-selection-border-radius);
  border-start-end-radius: var(--table-selection-border-radius);
  border-top-width: var(--table-selection-border-width);
  /* top: calc(-1 * var(--table-selection-border-width)); */
}

td.dataedit-is-selected.bottom::after {
  border-end-start-radius: var(--table-selection-border-radius);
  border-end-end-radius: var(--table-selection-border-radius);
  border-bottom-width: var(--table-selection-border-width);
  /* bottom: calc(-1 * var(--table-selection-border-width)); */
}

td.dataedit-is-dragged-over,
th.dataedit-is-dragged-over {
  position: relative;
}
td.dataedit-is-dragged-over:not(.dataedit-is-selected)::after,
th.dataedit-is-dragged-over:not(.dataedit-is-selected)::after {
  pointer-events: none;
  content: "";
  display: block;
  position: absolute;
  top: 0;
  height: 100%;
  z-index: 1;
  width: var(--table-selection-border-width);
  background-color: var(--table-selection-border-color);
}

td.dataedit-is-dragged-over.right:not(.dataedit-is-selected)::after,
th.dataedit-is-dragged-over.right:not(.dataedit-is-selected)::after {
  right: 0;
}

td.dataedit-is-dragged-over.left:not(.dataedit-is-selected)::after,
th.dataedit-is-dragged-over.left:not(.dataedit-is-selected)::after {
  left: 0;
}
div.dataedit-property-header {
  border-radius: var(--clickable-icon-radius);
  padding: 0 var(--size-2-3);
}

div.dataedit-property-header:hover {
  opacity: var(--icon-opacity-hover);
  color: var(--icon-color-hover);
  background-color: var(--background-modifier-hover);
  cursor: var(--cursor);
}

div.dataedit-table-col-btn,
div.dataedit-table-row-btn {
  --icon-size: var(--icon-s);
  --icon-stroke: var(--icon-s-stroke-width);
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--table-drag-handle-size);
  width: var(--table-drag-handle-size);
  background-color: var(--table-add-button-background);
  border: var(--table-add-button-border-width) solid
    var(--table-add-button-border-color);
  color: var(--text-faint);
  transition: opacity 0s 0.1s;
  opacity: 0;
  user-select: none;
  -webkit-user-select: none;
}

div.dataedit-table-row-btn {
  top: 100%;
  inset-inline-start: 0;
  width: 100%;
  border-top: none;
  cursor: s-resize;
  max-height: var(--icon-s);
}

div.dataedit-table-col-btn {
  top: 0;
  height: 100%;
  inset-inline-start: 100%;
  border-inline-start: none;
  cursor: e-resize;
}

div.dataedit-table-row-btn:hover,
div.dataedit-table-col-btn:hover {
  opacity: 1;
}

div.metadata-property-value.dataedit:focus-within {
  background-color: var(--metadata-input-background);
}

div.metadata-property-value.dataedit {
  padding-inline-start: 5px;
}

div.setting-item.dataedit-setting-item {
  border-bottom: 1px solid var(--background-modifier-border);
  margin-bottom: 26px;
  cursor: pointer;
}

div.dataedit-nested-setting-container {
  padding-left: 34px;
  padding-bottom: 16px;
}
