/* @tailwind base;
@tailwind components;
@tailwind utilities; */

.no-p-margin p {
  margin: 0;
}

/* th:has(div.column-reorder-button) {
  padding: 0%;
  border: none;
  background-color: transparent;
  height: fit-content;
  z-index: 1;
}

th:has(div.column-reorder-button[data-grabbing="true"]) {
  z-index: 5;
}

th:has(div.column-reorder-button[data-hidden="true"]) {
  opacity: 0;
  z-index: -1;
} */

/* table.dataedit-table > thead > tr > th,
table.dataedit-table > tbody > tr > td {
  white-space: nowrap;
} */

/* div.metadata-property-value.dataedit:focus-within {
  background-color: var(--metadata-input-background);
}

div.metadata-property-value.dataedit {
  padding-inline-start: 5px;
} */

/* div.setting-item.dataedit-setting-item {
  border-bottom: 1px solid var(--background-modifier-border);
  margin-bottom: 26px;
  cursor: pointer;
} */

/* div.dataedit-nested-setting-container {
  padding-left: 34px;
  padding-bottom: 16px;
  background-color: aqua;
} */

/* METADATA INPUTS */
div.metadata-property-value {
  &:has(select.dropdown),
  &:has(input[type="color"]),
  &:has(input.slider[type="range"]),
  &:has(div.checkbox-container) {
    padding: var(--size-4-1) var(--size-4-2);
    &:focus-within {
      background-color: var(--metadata-input-background);
    }
  }

  &:has(div.dataedit-property-text-div) {
    &:focus-within {
      background-color: var(--metadata-input-background);
    }

    /* Usually .cm-line but not always. Ensure's alignment with other property editors */
    & .cm-line,
    & .cm-line ~ * {
      padding-inline: var(--size-4-2);
    }
  }
}

.dataedit {
  div&-nested-setting-container {
    padding-left: 34px;
    padding-bottom: 16px;
  }
  div&-setting-item.setting-item {
    border-bottom: 1px solid var(--background-modifier-border);
    margin-bottom: 26px;
    cursor: pointer;
  }

  input&-property-number-input[type="number"] {
    background-color: transparent;
    border: none;
    width: fit-content;
    font-size: var(--font-table-text-size);
    box-shadow: none;
    padding: 0px;
    height: fit-content;
  }

  ul& {
    &-property-multitext-ul {
      margin-block: 0px 0px;
      & > li {
        margin-inline-start: calc(var(--list-indent) / 2);
        padding-top: 5px; /* when rendering tags, will overlap without this */
        & div.cm-active.cm-line {
          padding-inline-end: 1ch; /* when rendering tags, makes it easier to click to edit instead of clicking to search for tag */
        }
      }
    }
  }

  div&-property-text-div {
    width: 100%;

    & div.cm-gutters {
      display: none !important;
    }
    & div.cm-scroller {
      overflow: visible;
    }

    & .cm-line,
    & .cm-content {
      max-width: none !important;
      width: fit-content !important;
      line-height: inherit !important;
    }
    & div[role="textbox"] {
      width: fit-content;
      text-wrap: nowrap;
    }
  }

  div&-column-reorder-button {
    /* position: absolute; */
    position: relative;
    width: 100%;
    height: fit-content;
    display: flex;
    flex-direction: row;
    align-items: end;
    justify-content: center;
    border-radius: var(--radius-s) var(--radius-s) 0 0;
    background-color: var(--table-drag-handle-background);
    color: transparent;
    user-select: none;
    touch-action: none;
    z-index: 1;
    &:hover {
      color: var(--table-drag-handle-color);
      cursor: grab;
    }
    /* This doesn't work for some reason... natvie obsidian tables have same issue */
    &[data-grabbing="true"] {
      background-color: var(--color-accent);
      /* position: absolute; */
      color: var(--text-normal);
      cursor: grabbing;
      z-index: 5;
    }
    [data-hidden="true"] {
      z-index: -1;
    }
  }

  td&-is-selected,
  th&-is-selected {
    position: relative;
    &::after {
      pointer-events: none;
      content: "";
      display: block;
      position: absolute;
      top: calc(-1 * var(--table-border-width));
      inset-inline-end: calc(-1 * var(--table-border-width));
      bottom: calc(-1 * var(--table-border-width));
      inset-inline-start: calc(-1 * var(--table-border-width));
      background-color: var(--table-selection);
      border: 0px solid var(--table-selection-border-color);
      mix-blend-mode: var(--table-selection-blend-mode);
      z-index: 1;
      border-inline-end-width: var(--table-selection-border-width);
      border-inline-start-width: var(--table-selection-border-width);
    }
    &.top::after {
      border-start-start-radius: var(--table-selection-border-radius);
      border-start-end-radius: var(--table-selection-border-radius);
      border-top-width: var(--table-selection-border-width);
      /* top: calc(-1 * var(--table-selection-border-width)); */
    }
    &.bottom::after {
      border-end-start-radius: var(--table-selection-border-radius);
      border-end-end-radius: var(--table-selection-border-radius);
      border-bottom-width: var(--table-selection-border-width);
      /* bottom: calc(-1 * var(--table-selection-border-width)); */
    }
  }

  td&-is-dragged-over,
  th&-is-dragged-over {
    position: relative;
    &:not(.dataedit-is-selected) {
      &::after {
        pointer-events: none;
        content: "";
        display: block;
        position: absolute;
        top: 0;
        height: 100%;
        z-index: 1;
        width: var(--table-selection-border-width);
        background-color: var(--table-selection-border-color);
      }

      &.right::after {
        right: 0;
      }
      &.left::after {
        left: 0;
      }
    }
  }

  &-property-header {
    border-radius: var(--clickable-icon-radius);
    padding: 0 var(--size-2-3);
    &:hover {
      opacity: var(--icon-opacity-hover);
      color: var(--icon-color-hover);
      background-color: var(--background-modifier-hover);
      cursor: var(--cursor);
    }
  }

  &-table-col-btn,
  &-table-row-btn {
    --icon-size: var(--icon-s);
    --icon-stroke: var(--icon-s-stroke-width);
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--table-drag-handle-size);
    width: var(--table-drag-handle-size);
    background-color: var(--table-add-button-background);
    border: var(--table-add-button-border-width) solid
      var(--table-add-button-border-color);
    color: var(--text-faint);
    transition: opacity 0s 0.1s;
    opacity: 0;
    user-select: none;
    -webkit-user-select: none;
    &:hover {
      opacity: 1;
    }
  }

  &-table-row-btn {
    top: 100%;
    inset-inline-start: 0;
    width: 100%;
    border-top: none;
    cursor: s-resize;
    max-height: var(--icon-s);
  }

  &-table-col-btn {
    top: 0;
    height: 100%;
    inset-inline-start: 100%;
    border-inline-start: none;
    cursor: e-resize;
  }

  /* input[type="range"]::-webkit-slider-runnable-track {
    background-color: green;
  } */
}
